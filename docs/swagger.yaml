definitions:
  dtos.LoginDTO:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  entities.Error:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  entities.JwtToken:
    properties:
      token:
        type: string
    type: object
  entities.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Login with the given input data
      parameters:
      - description: Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.JwtToken'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.Error'
      summary: Login
  /api/users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.Error'
      summary: Get all users
    post:
      consumes:
      - application/json
      description: Create a new user with the given input data
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.Error'
      summary: Create a new user
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user with the given input data
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.Error'
      summary: Delete a user
    put:
      consumes:
      - application/json
      description: Update a user with the given input data
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a user
swagger: "2.0"
